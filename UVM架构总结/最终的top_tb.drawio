<mxfile host="app.diagrams.net" modified="2020-12-22T15:55:14.009Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36" etag="xi8oQm_kwURTlDfwmTUv" version="14.1.1" type="github">
  <diagram id="M6eRdIAuC2BlORuKV55p" name="第 1 页">
    <mxGraphModel dx="1730" dy="2042" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="svM71PQ_HXaByryMq1vq-3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.003;entryY=0.8;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=15;" edge="1" parent="1" source="m51jKzYYjfxLeKh93bPM-2" target="svM71PQ_HXaByryMq1vq-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="m51jKzYYjfxLeKh93bPM-2" value="&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;//这是一个top顶层文件，run test（）是run的case，比如case0，本来应该是run test(my_case0)，但是这样用不方便，所以用run tset(), 然后在编译时传入test的name&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;`timescale 1ns/1ps&lt;/div&gt;&lt;div&gt;`include &quot;uvm_macros.svh&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff3333&quot;&gt;//包含所有的.sv文件&lt;/font&gt;&lt;/div&gt;&lt;div&gt;import uvm_pkg::*;&lt;/div&gt;&lt;div&gt;`include &quot;my_if.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_transaction.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_sequencer.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_driver.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_monitor.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_agent.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_model.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_scoreboard.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_env.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;base_test.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_case0.sv&quot;&lt;/div&gt;&lt;div&gt;`include &quot;my_case1.sv&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//是个module&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;module top_tb;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//声明信号&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;reg clk;&lt;/div&gt;&lt;div&gt;reg rst_n;&lt;/div&gt;&lt;div&gt;reg[7:0] rxd;&lt;/div&gt;&lt;div&gt;reg rx_dv;&lt;/div&gt;&lt;div&gt;wire[7:0] txd;&lt;/div&gt;&lt;div&gt;wire tx_en;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//实例化接口&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;my_if input_if(clk, rst_n);&lt;/div&gt;&lt;div&gt;my_if output_if(clk, rst_n);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//实例化DUT&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;dut my_dut(.clk(clk),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.rst_n(rst_n),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.rxd(input_if.data),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.rx_dv(input_if.valid),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.txd(output_if.data),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.tx_en(output_if.valid));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//产生激励信号&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;initial begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;clk = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;forever begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; #100 clk = ~clk;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;end&lt;/div&gt;&lt;div&gt;end&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//产生复位信号&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;initial begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;rst_n = 1&#39;b0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;#1000;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;rst_n = 1&#39;b1;&lt;/div&gt;&lt;div&gt;end&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//运行用例，用例名字通过编译时传入，比如my_test0等&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;initial begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;run_test();&lt;/div&gt;&lt;div&gt;end&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255 , 51 , 51)&quot;&gt;//通过uvm_donfig_db连接driver、monitor中的虚接口&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;initial begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;uvm_config_db#(virtual my_if)::set(null, &quot;uvm_test_top.env.i_agt.drv&quot;, &quot;vif&quot;, input_if);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;uvm_config_db#(virtual my_if)::set(null, &quot;uvm_test_top.env.i_agt.mon&quot;, &quot;vif&quot;, input_if);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;uvm_config_db#(virtual my_if)::set(null, &quot;uvm_test_top.env.o_agt.mon&quot;, &quot;vif&quot;, output_if);&lt;/div&gt;&lt;div&gt;end&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;endmodule&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=17;align=left;" parent="1" vertex="1">
          <mxGeometry x="20" y="-1140" width="700" height="1450" as="geometry" />
        </mxCell>
        <mxCell id="svM71PQ_HXaByryMq1vq-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=15;" edge="1" parent="1" source="svM71PQ_HXaByryMq1vq-1" target="svM71PQ_HXaByryMq1vq-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="svM71PQ_HXaByryMq1vq-1" value="&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;//左边的顶层文件运行这个case，这个case继承于base_test，base_test中又实例化了ENV&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;`ifndef MY_CASE0__SV&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;`define MY_CASE0__SV&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;class case0_sequence extends uvm_sequence #(my_transaction);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;my_transaction m_trans;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;function&amp;nbsp; new(string name= &quot;case0_sequence&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; super.new(name);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;endfunction&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;virtual task body();&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(starting_phase != null)&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;starting_phase.raise_objection(this);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; repeat (10) begin&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;`uvm_do(m_trans)&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; end&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; #100;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if(starting_phase != null)&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;starting_phase.drop_objection(this);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;endtask&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;`uvm_object_utils(case0_sequence)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;endclass&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;class my_case0 extends base_test;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;function new(string name = &quot;my_case0&quot;, uvm_component parent = null);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; super.new(name,parent);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;endfunction&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;extern virtual function void build_phase(uvm_phase phase);&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp;`uvm_component_utils(my_case0)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;endclass&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;function void my_case0::build_phase(uvm_phase phase);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;super.build_phase(phase);&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp;uvm_config_db#(uvm_object_wrapper)::set(this,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;env.i_agt.sqr.main_phase&quot;,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;default_sequence&quot;,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case0_sequence::type_id::get());&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;endfunction&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;&lt;br style=&quot;font-size: 15px&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 15px&quot;&gt;`endif&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=15;align=left;" vertex="1" parent="1">
          <mxGeometry x="820" y="-1080" width="580" height="840" as="geometry" />
        </mxCell>
        <mxCell id="svM71PQ_HXaByryMq1vq-2" value="&lt;div&gt;`ifndef BASE_TEST__SV&lt;/div&gt;&lt;div&gt;`define BASE_TEST__SV&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;class base_test extends uvm_test;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;my_env&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;env;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;function new(string name = &quot;base_test&quot;, uvm_component parent = null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; super.new(name,parent);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;endfunction&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;extern virtual function void build_phase(uvm_phase phase);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;extern virtual function void report_phase(uvm_phase phase);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp; &amp;nbsp;`uvm_component_utils(base_test)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;endclass&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;//实例化ENV&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;function void base_test::build_phase(uvm_phase phase);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;super.build_phase(phase);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;env&amp;nbsp; =&amp;nbsp; my_env::type_id::create(&quot;env&quot;, this);&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;endfunction&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;function void base_test::report_phase(uvm_phase phase);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;uvm_report_server server;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;int err_num;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;super.report_phase(phase);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;server = get_report_server();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;err_num = server.get_severity_count(UVM_ERROR);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;if (err_num != 0) begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $display(&quot;TEST CASE FAILED&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;end&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;else begin&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $display(&quot;TEST CASE PASSED&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;end&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#ff0000&quot;&gt;endfunction&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;`endif&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=15;align=left;" vertex="1" parent="1">
          <mxGeometry x="1500" y="-1040" width="620" height="850" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
